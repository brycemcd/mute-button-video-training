version: '2'
services:
  # Looks for images in the VIDEO_BASE_DIR and transforms them to greyscale,
  # 240x320, then creates FPS images from the video and writes those images
  # to DESTINATION_DIR
  #

  video_converter:
    image: jrottenberg/ffmpeg
    environment:
      # frames per second (video to image)
      - FPS=2
      # where can the videos be found? Assumes game videos are in a subdir called
      # game and ads are in a subdir called ad
      - VIDEO_BASE_DIR=/tmp/football
      # where should converted images land?
      - DESTINATION_DIR=/tmp/football/converted_images
      # outputs all ffmpeg output to $LOG_DIR/conversion.log
      - LOG_DIR=/tmp/football
    volumes:
      - /home/brycemcd/Videos/football:/tmp/football
      - ./:/tmp/bin
    entrypoint: /tmp/bin/video_converter.sh

  # NOTE: build the image in video/Dockerfile as football_sample_and_model
  model_training:
    image: football_sample_and_model
    volumes:
      - /home/brycemcd/Videos/football/converted_images:/tmp/images:ro
      - ./:/tmp/bin
      - ../models_and_training_data:/tmp/models_and_training_data
      #- /home/brycemcd/Videos/football_test:/tmp/test

    command: python -u /tmp/bin/create_samples_from_images.py
#    command: python -u /tmp/bin/create_training_data.py
#    command: python -u /tmp/bin/model_generator.py
     # tests
#    command: pytest /tmp/bin/test/test_create_training_data.py
#    command: pytest /tmp/bin/test/test_create_samples_from_images.py

  model_listener:
    image: football_sample_and_model
    volumes:
      - /home/brycemcd/Videos/football/converted_images:/tmp/images:ro
      - ./:/tmp/bin
    command: python -u /tmp/bin/model_generator_producer.py
    #command: python -u /tmp/bin/model_generator_consumer.py

  model_consumer:
    image: football_sample_and_model
    volumes:
      - /home/brycemcd/Videos/football/converted_images:/tmp/images:ro
      - ./:/tmp/bin
      - ../models_and_training_data:/tmp/models_and_training_data
    command: python -u /tmp/bin/model_generator_consumer.py

  image_stream_classifier:
     # NOTE: build the image in video/Dockerfile as football_sample_and_model
     #image: .
    image: football_sample_and_model
    environment:
      - VIDEO_BASE_DIR=/tmp/football
    volumes:
      - ./:/tmp/bin
      - ../models_and_training_data:/tmp/models_and_training_data
      - ../models_and_training_data/streamed_images:/tmp/streamed_images

    command: python -u /tmp/bin/classify_image.py
